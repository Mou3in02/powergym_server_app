{% extends 'base.html.twig' %}

{% block title %}AdminLTE 3 | ChartJS{% endblock %}



{% block body %}
  <div class="wrapper">
    <div class="content-wrapper">
      <section class="content-header">
        <div class="container-fluid">
          <div class="row mb-2">
            <div class="col-sm-6">
              <h1>ChartJS</h1>
            </div>
            <div class="col-sm-6">
              <ol class="breadcrumb float-sm-right">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item active">ChartJS</li>
              </ol>
            </div>
          </div>
        </div>
      </section>

      <section class="content">
        <div class="container-fluid">

          <!-- BAR CHART (MENSUEL) -->
          <div class="row">
            <div class="col-md-12">
              <div class="card card-info">
                <div class="card-header">
                  <h3 class="card-title">Bar Chart</h3>
                </div>
                <div class="card-body">
                  <canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                </div>
              </div>
            </div>
          </div>

          <!-- WEEKLY BAR CHART -->
          <div class="row">
            <div class="col-md-12">
              <div class="card card-danger">
                <div class="card-header d-flex justify-content-between align-items-center">
                  <h3 class="card-title mb-0">Bar Chart (Weekly Clients)</h3>
                </div>
                <div class="card-body">
                  <input type="date" id="customDate" class="form-control form-control-sm w-auto mb-2 float-right" />
                  <span id="weekRange" style="line-height: 2.4rem; margin-left: 10px; font-weight: 600; color:#444;"></span>
                  <canvas id="weeklyBarChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; width: 100%;"></canvas>
                </div>
              </div>
            </div>
          </div>

          <!-- PIE CHART TRANSFORMED TO BAR CHART (TOTAL PRICES) -->
          <div class="card card-info">
            <div class="card-header">
              <h3 class="card-title">Bar Chart (Total des prix)</h3>
            </div>
            <div class="card-body">
              <canvas id="barChart1" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
            </div>
          </div>

        </div>
      </section>

    </div>

    <footer class="main-footer">
      <div class="float-right d-none d-sm-block">
        <b>Version</b> 3.2.0
      </div>
      <strong>&copy; 2014-2021 <a href="https://adminlte.io">AdminLTE.io</a>.</strong> All rights reserved.
    </footer>
  </div>
{% endblock %}

{% block javascripts %}
  {% include 'blocks/javascripts.html.twig' %}
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    $(function () {
      // Mensuel Bar Chart
      const labels = {{ labels|raw }};
      const values = {{ values|raw }};

      const ctxBar = document.getElementById('barChart').getContext('2d');
      new Chart(ctxBar, {
        type: 'bar',
        data: {
          labels: labels,
          datasets: [{
            label: 'Nombre de clients par mois',
            data: values,
            backgroundColor: 'rgba(60,141,188,0.9)',
            borderColor: 'rgba(60,141,188,1)',
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                precision: 0
              }
            }
          }
        }
      });

      // Weekly Bar Chart dynamique
      const ctxWeekly = document.getElementById('weeklyBarChart').getContext('2d');
      let weeklyChart;

      const fixedDayColors = {
        'Monday': '#4A90E2',
        'Tuesday': '#50E3C2',
        'Wednesday': '#F5A623',
        'Thursday': '#D0021B',
        'Friday': '#9013FE',
        'Saturday': '#F8E71C',
        'Sunday': '#B8E986',
        'No client': '#70726E'
      };

      const weeklyOptions = {
        maintainAspectRatio: false,
        responsive: true,
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              stepSize: 1
            }
          }
        },
        plugins: {
          tooltip: {
            callbacks: {
              label: function(context) {
                const label = context.dataset.label || '';
                const value = context.parsed.y;
                return `${label}: ${value}`;
              }
            }
          },
          legend: {
            display: false
          }
        }
      };


      // Dans la fonction loadWeeklyChart(date = '')
      function loadWeeklyChart(date = '') {
        fetch(`/chart?date=${date}`)
                .then(response => response.json())
                .then(result => {
                  const labels = result.labels;
                  const data = result.data.map(v => Number(v));

                  const allZero = data.every(value => value === 0);

                  let finalLabels, finalData, colors;

                  if (allZero) {
                    finalLabels = ['Aucun client cette semaine'];
                    finalData = [0];
                    colors = ['#d3d3d3']; // gris clair pour pas de données
                  } else {
                    finalLabels = labels;
                    finalData = data;
                    // Toutes les barres auront la même couleur
                    colors = data.map(() => 'rgba(60,141,188,0.9)');
                  }

                  if (weeklyChart) {
                    weeklyChart.destroy();
                  }

                  weeklyChart = new Chart(ctxWeekly, {
                    type: 'bar',
                    data: {
                      labels: finalLabels,
                      datasets: [{
                        label: 'Nombre de clients',
                        data: finalData,
                        backgroundColor: colors
                      }]
                    },
                    options: {
                      maintainAspectRatio: false,
                      responsive: true,
                      scales: {
                        y: {
                          beginAtZero: true,
                          ticks: {
                            stepSize: 1
                          }
                        }
                      },
                      plugins: {
                        tooltip: {
                          callbacks: {
                            label: function(context) {
                              const label = context.dataset.label || '';
                              const value = context.parsed.y;
                              return `${label}: ${value}`;
                            }
                          }
                        },
                        legend: {
                          display: true,
                          labels: {
                            // Forcer la couleur dans la légende, vu qu'il n'y a qu'un dataset
                            generateLabels: function(chart) {
                              return [{
                                text: 'Nombre de clients par semaines',
                                fillStyle: 'rgba(60,141,188,0.9)',
                                strokeStyle: 'rgba(60,141,188,0.9)',
                                hidden: false,
                                index: 0
                              }];
                            }
                          }
                        }
                      }
                    }
                  });
                })
                .catch(err => console.error('Erreur fetch:', err));
      }


      loadWeeklyChart();

      function getWeekRange(dateString) {
        // dateString au format 'yyyy-mm-dd'
        const date = new Date(dateString);
        if (isNaN(date)) return '';

        const day = date.getDay(); // 0=Dimanche, 1=Lundi ... 6=Samedi
        // Pour calculer lundi : reculer de (day - 1) jours, si dimanche (0) reculer de 6 jours
        const diffToMonday = day === 0 ? 6 : day - 1;

        const monday = new Date(date);
        monday.setDate(date.getDate() - diffToMonday);

        const sunday = new Date(monday);
        sunday.setDate(monday.getDate() + 6);

        // Formater les dates en JJ/MM/YYYY
        const options = { day: '2-digit', month: '2-digit', year: 'numeric' };
        const mondayStr = monday.toLocaleDateString('fr-FR', options);
        const sundayStr = sunday.toLocaleDateString('fr-FR', options);

        return `${mondayStr} ➔ ${sundayStr}`;
      }

      $('#customDate').on('change', function () {
        const selectedDate = this.value;
        loadWeeklyChart(selectedDate);

        // Afficher la plage de la semaine
        const rangeText = getWeekRange(selectedDate);
        $('#weekRange').text(rangeText);
      });

      // Bar chart pour les prix (anciennement pie)
      const ctxPrice = document.getElementById('barChart1').getContext('2d');
      const pieLabels = {{ pieLabels|raw }};
      const pieValues = {{ pieValues|raw }};

      new Chart(ctxPrice, {
        type: 'bar',
        data: {
          labels: pieLabels,
          datasets: [{
            label: 'Total des prix (DNT)',
            data: pieValues,
            backgroundColor: 'rgba(60,141,188,0.9)',
            borderColor: 'rgba(60,141,188,1)',
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                callback: function(value) {
                  return value.toLocaleString('fr-FR', { minimumFractionDigits: 2 }) + ' DNT';
                }
              }
            }
          },
          plugins: {
            tooltip: {
              callbacks: {
                label: function(context) {
                  const label = context.dataset.label || '';
                  const value = context.parsed.y || 0;
                  const formatted = value.toLocaleString('fr-FR', {minimumFractionDigits: 2});
                  return label + ': ' + formatted + ' DNT';
                }
              }
            }
          }
        }
      });
    });
  </script>
{% endblock %}
