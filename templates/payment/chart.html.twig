{% extends 'base_dashboard.html.twig' %}

{% block title %}Statistiques des abonnements{% endblock %}

{% block body %}
    <div class="content-wrapper">
        <section class="content-header">
            <div class="container-fluid">
                <h4 class="h4">Statistiques des abonnements</h4>
            </div>
        </section>

        <section class="content">
            <div class="container-fluid">

                <!-- Graphique hebdomadaire -->
                <div class="card card-info">
                    <div class="card-header"><h3 class="card-title">Graphique hebdomadaire</h3></div>
                    <div class="card-body" style="height: 280px; position: relative;">
                        <input type="date" id="customDate" class="form-control form-control-sm w-auto mb-2" value="{{ weekDate }}">
                        <canvas id="weeklyBarChart"
                                data-labels='{{ labelsWeek|raw }}'
                                data-values='{{ valuesWeek|raw }}'
                                style="width: 100%; height: 250px;"></canvas>
                    </div>
                </div>

                <!-- Graphique par mois -->
                <div class="card card-info">
                    <div class="card-header"><h3 class="card-title">Graphique par mois</h3></div>
                    <div class="card-body" style="height: 250px; position: relative;">
                        <select id="yearPicker" class="form-control form-control-sm w-auto mb-2">
                            {% for y in 2020..currentYear %}
                                <option value="{{ y }}" {% if y == currentYear %}selected{% endif %}>{{ y }}</option>
                            {% endfor %}
                        </select>
                        <canvas id="subscriptionsByMonth"
                                data-labels='{{ labelsMonths|raw }}'
                                data-values='{{ valuesMonths|raw }}'
                                style="width: 100%; height: 250px;"></canvas>
                    </div>
                </div>




                <!-- Graphique par années -->
                <div class="row">
                    <div class="col-md-12">
                        <div class="card card-info">
                            <div class="card-header"><h3 class="card-title">Graphique par années</h3></div>
                            <div class="card-body">
                                <canvas id="subscriptionsByYear"
                                        data-labels='{{ labelsYears|raw }}'
                                        data-values='{{ valuesYears|raw }}'
                                        style="min-height: 250px; height: 250px;"></canvas>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </section>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let monthlyChart, yearlyChart, weeklyChart;

            function renderBarChart(canvasId, labelText) {
                const canvas = document.getElementById(canvasId);
                if (!canvas) return;
                const labels = JSON.parse(canvas.dataset.labels || "[]");
                const values = JSON.parse(canvas.dataset.values || "[]");

                if (canvasId === 'subscriptionsByMonth' && monthlyChart) monthlyChart.destroy();
                if (canvasId === 'subscriptionsByYear' && yearlyChart) yearlyChart.destroy();

                const chartInstance = new Chart(canvas.getContext('2d'), {
                    type: 'bar',
                    data: { labels, datasets: [{ label: labelText, data: values, backgroundColor: 'rgba(60,141,188,0.9)' }] },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: { beginAtZero: true, ticks: { precision: 0, stepSize: 1 } },
                            x: { ticks: { autoSkip: false } }
                        }
                    }
                });

                if (canvasId === 'subscriptionsByMonth') monthlyChart = chartInstance;
                if (canvasId === 'subscriptionsByYear') yearlyChart = chartInstance;
            }

            function renderWeeklyChart(labels, data) {
                const canvas = document.getElementById('weeklyBarChart');
                if (!canvas) return;

                if (weeklyChart) weeklyChart.destroy();
                weeklyChart = new Chart(canvas.getContext('2d'), {
                    type: 'bar',
                    data: { labels, datasets: [{ label: 'Abonnements par jour', data, backgroundColor: '#17a2b8' }] },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: { beginAtZero: true, ticks: { stepSize: 1 } },
                            x: { ticks: { autoSkip: false } }
                        },
                        plugins: { legend: { display: true } }
                    }
                });
            }

            // Render initial charts
            renderBarChart("subscriptionsByMonth", "Abonnements par mois");
            renderBarChart("subscriptionsByYear", "Abonnements par année");
            renderWeeklyChart(
                JSON.parse(document.getElementById('weeklyBarChart').dataset.labels || "[]"),
                JSON.parse(document.getElementById('weeklyBarChart').dataset.values || "[]")
            );

            // Update semaine
            document.getElementById('customDate').addEventListener('change', function () {
                const selectedDate = this.value;
                fetch(`/payment/charts?weekDate=${selectedDate}`, { headers: { 'X-Requested-With': 'XMLHttpRequest' } })
                    .then(res => res.json())
                    .then(data => renderWeeklyChart(data.labelsWeek, data.valuesWeek));
            });

            // Update mois
            document.getElementById('yearPicker').addEventListener('change', function() {
                const selectedYear = this.value;
                fetch(`/payment/charts?year=${selectedYear}`, { headers: { 'X-Requested-With': 'XMLHttpRequest' } })
                    .then(res => res.json())
                    .then(data => {
                        const canvas = document.getElementById('subscriptionsByMonth');
                        canvas.dataset.labels = JSON.stringify(data.labelsMonths);
                        canvas.dataset.values = JSON.stringify(data.valuesMonths);
                        renderBarChart('subscriptionsByMonth', 'Abonnements par mois');
                    });
            });
        });


    </script>

{% endblock %}
